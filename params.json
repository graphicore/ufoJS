{"name":"ufoJS","tagline":"Javascript API for the Unified Font Object","body":"ufoJS\r\n=====\r\n\r\nWith ufoJS you can load, manipulate and save font data in JavaScript.\r\nA [UFO: Unified Font Object](http://unifiedfontobject.org) is a directory \r\nbased file format representing font data in a human readable way. UFO\r\nis already supported by all major font development tools. ufoJS enables\r\nbrowser based font development tools that blend nicely into\r\nprofessional workflows.\r\n\r\nufoJS is tested with nodeJS and current Firefox and Chrome. You can run the\r\nunit tests with other browsers and see where it breaks and where it works.\r\n\r\nTechnology remarks\r\n------------------\r\n\r\nThe starting point for ufoJS is porting RoboFab to JavaScript. Once this\r\nis done to a satisfactory point, we can start with optimizing the APIs and\r\ninner  workings for new challenges. However, the first goal is to become\r\nuseful and fully unit tested.\r\n\r\nThere are already significant differences to the RoboFab legacy:\r\n\r\n * ufoJS provides both a synchronous and an [asynchronous](http://en.wikipedia.org/wiki/Asynchronous_I/O)\r\n   API.\r\n   \r\n   * The asynchronous API is particularly useful for User Interfaces or\r\n   fast NodeJS based servers. JavaScript developers know this concept already.\r\n   * The synchronous API is useful for adhoc-scripting, simple command line\r\n     programms or webworkers. It is less complex to write synchronous scripts.\r\n     \r\n   [ObtainJS](https://github.com/graphicore/obtainJS) is used to implement the\r\n   asynchronous and synchronous API side bz side. Go to the OtainJS\r\n   Repository to learn how to use APIs implemented with it or how to implement\r\n   APIs with ObtainJS.\r\n   \r\n * ufoJS does file system abstraction based on a dependency injection\r\n   pattern. You can write your own persistence module and just use it.\r\n   See the [I/O modules](https://github.com/graphicore/ufoJS/tree/master/lib/tools/io)\r\n   for the yet early state of the Interface.\r\n\r\nThere is no good Documentation or guide yet. You are welcome to start that\r\nand I would gladly support you. In the meantime your options are:\r\n\r\n* [Read the source, Luke](http://blog.codinghorror.com/learn-to-read-the-source-luke/)\r\n  and read the unit tests, too. Also, there is a mini sample App, the [glif-renderer](./env/glif-renderer.xhtml)\r\n* See how things are done with RoboFab and try to transfer you knowledge.\r\n\r\n\r\nFurther Reading\r\n---------------\r\n\r\n### [UFO Reference](http://unifiedfontobject.org)\r\n\r\nkeep this under your pillow ;-)\r\n\r\n### Code Input\r\n\r\nufoJS is based on porting the Python code of FontTools and RoboFab to JavaScript.\r\n\r\nThe files of the Python sources are referenced in the headers of the files\r\nof this project.\r\n\r\n[FontTools](http://sourceforge.net/projects/fonttools/)\r\nAuthor: Just van Rossum \r\n\r\n[RoboFab](http://www.robofab.org)\r\nAuthors: Erik van Blokland, Tal Leming, Just van Rossum\r\n\r\n### Dependencies\r\n\r\nThe Project itself uses an [Modules/AsynchronousDefinition-Loader](http://wiki.commonjs.org/wiki/Modules/AsynchronousDefinition)\r\ndefined by [commonJs](http://www.commonjs.org/) and currently provided by\r\n[RequireJS](http://requirejs.org/) and [RequireJS for nodeJs](https://github.com/jrburke/r.js)\r\nAuthor: James Burke\r\n\r\nThe Tests are driven by (an old version of) the [D.O.H: Dojo Objective Harness](http://dojotoolkit.org/reference-guide/util/doh.html)\r\nAuthors: Alex Russell, Pete Higgins, Dustin Machi, Jared Jurkiewicz\r\n\r\nThe implementation of the Synchronous/Asynchronous APIs is made\r\nwith [ObtainJS](https://github.com/graphicore/obtainJS) Author: Lasse Fister\r\n\r\n<hr />\r\n\r\nCopyright (c) 2011, 2012, 2013, 2014, Lasse Fister lasse@graphicore.de, http://graphicore.de\r\n\r\nYou should have received a copy of the MIT License along with this program.\r\nIf not, see http://www.opensource.org/licenses/mit-license.php\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}